# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Build
      run: mvn --batch-mode -B package --file pom.xml -DskipTests
    
    - name: Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
    
    - name: Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: '**/*Test.xml'
        reporter: java-junit
        fail-on-error: false
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      id: test-results
      if: always()
      with:
        files: "**/Test*.xml"

    - name: Set badge color
      shell: bash
      run: |
        case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
          success)
            echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
            ;;
          failure)
            echo "BADGE_COLOR=800000" >> $GITHUB_ENV
            ;;
          neutral)
            echo "BADGE_COLOR=696969" >> $GITHUB_ENV
            ;;
        esac

    - name: Create badge
      uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
      with:
        label: Tests
        status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
        color: ${{ env.BADGE_COLOR }}
        path: '.github/coverage.svg'
    - name: Commit badge
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        cd .github
        if [[ `git status --porcelain *.svg` ]]; then
          git config --global user.name 'github-actions'
          git config --global user.email 'kelsier.luthadel@protonmail.com'
          git add *.svg
          git commit -m "Autogenerated badge update"
          git push
        fi
    
    
